# Makefile for Melvin Attention Vision (C++ with OpenCV)

CXX = g++
CXXFLAGS = -std=c++17 -Wall -Wextra -O3 -I. -I./melvin -pthread -DHAVE_OPENCV
LDFLAGS = -lpthread

# OpenCV (try both opencv4 and opencv)
OPENCV_CFLAGS = $(shell pkg-config --cflags opencv4 2>/dev/null || pkg-config --cflags opencv 2>/dev/null || echo "")
OPENCV_LIBS = $(shell pkg-config --libs opencv4 2>/dev/null || pkg-config --libs opencv 2>/dev/null || echo "-lopencv_core -lopencv_videoio -lopencv_imgproc -lopencv_highgui")

CXXFLAGS += $(OPENCV_CFLAGS)
LDFLAGS += $(OPENCV_LIBS)

# Directories
CORE_DIR = melvin/core
IO_DIR = melvin/io
DEMO_DIR = melvin/demos

# Core objects (minimal for vision)
CORE_OBJS = \
	$(CORE_DIR)/atomic_graph.o

# Vision objects
VISION_OBJS = \
	$(IO_DIR)/attention_vision.o

# All objects
ALL_OBJS = $(CORE_OBJS) $(VISION_OBJS)

# Target
all: demo_attention_vision

demo_attention_vision: $(ALL_OBJS) $(DEMO_DIR)/demo_attention_vision.o
	@echo "üîó Linking demo_attention_vision..."
	$(CXX) $(CXXFLAGS) -o $@ $^ $(LDFLAGS)
	@echo ""
	@echo "‚úÖ Built: demo_attention_vision"
	@echo ""
	@echo "üöÄ Run:"
	@echo "   ./demo_attention_vision [camera_index]"
	@echo ""
	@echo "Examples:"
	@echo "   ./demo_attention_vision 0    # Built-in camera"
	@echo "   ./demo_attention_vision 1    # USB camera"
	@echo ""

# Vision library
$(IO_DIR)/attention_vision.o: $(IO_DIR)/attention_vision.cpp $(IO_DIR)/attention_vision.h
	@echo "üì¶ Compiling attention_vision.cpp..."
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Demo
$(DEMO_DIR)/demo_attention_vision.o: $(DEMO_DIR)/demo_attention_vision.cpp
	@echo "üì¶ Compiling demo_attention_vision.cpp..."
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Core objects
$(CORE_DIR)/%.o: $(CORE_DIR)/%.cpp $(CORE_DIR)/%.h
	@echo "üì¶ Compiling $<..."
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Check OpenCV
check_opencv:
	@echo "Checking OpenCV..."
	@pkg-config --modversion opencv4 2>/dev/null || pkg-config --modversion opencv 2>/dev/null || \
		(echo "‚ùå OpenCV not found. Install: brew install opencv" && exit 1)
	@echo "‚úÖ OpenCV found"

# Clean
clean:
	rm -f $(ALL_OBJS) $(DEMO_DIR)/demo_attention_vision.o demo_attention_vision
	@echo "‚úÖ Cleaned"

# Help
help:
	@echo "Melvin Attention Vision - C++ Build System"
	@echo ""
	@echo "Targets:"
	@echo "  all               - Build demo (default)"
	@echo "  check_opencv      - Check OpenCV installation"
	@echo "  clean             - Clean build artifacts"
	@echo "  help              - Show this message"
	@echo ""

.PHONY: all check_opencv clean help

