# ============================================================================
# MELVIN INTEGRATED SYSTEM - Complete Build
# ============================================================================

CXX = g++
CXXFLAGS = -std=c++17 -O3 -Wall -Wextra -I.
LDFLAGS = -pthread

# Check for PortAudio
PORTAUDIO_LIBS = $(shell pkg-config --libs portaudio-2.0 2>/dev/null || echo "-lportaudio")
PORTAUDIO_CFLAGS = $(shell pkg-config --cflags portaudio-2.0 2>/dev/null)

# Directories
AUDIO_DIR = melvin/audio
CORE_DIR = melvin/core
EXAMPLES_DIR = melvin/examples
TESTS_DIR = melvin/tests
BUILD_DIR = build

# Source files
CORE_SOURCES = $(CORE_DIR)/atomic_graph.cpp $(CORE_DIR)/input_manager.cpp
AUDIO_SOURCES = $(AUDIO_DIR)/audio_pipeline.cpp $(AUDIO_DIR)/audio_bridge.cpp
INTEGRATED_SOURCE = $(EXAMPLES_DIR)/melvin_integrated.cpp
TEST_SOURCE = $(TESTS_DIR)/test_integration_audio.cpp

# Object files
CORE_OBJECTS = $(BUILD_DIR)/atomic_graph.o $(BUILD_DIR)/input_manager.o
AUDIO_OBJECTS = $(BUILD_DIR)/audio_pipeline.o $(BUILD_DIR)/audio_bridge.o

# Targets
INTEGRATED_TARGET = melvin_integrated
TEST_TARGET = test_integration_audio

# ============================================================================
# MAIN TARGETS
# ============================================================================

.PHONY: all clean run test check help

all: $(INTEGRATED_TARGET) $(TEST_TARGET)
	@echo "✅ Integrated system built successfully"

$(INTEGRATED_TARGET): $(CORE_OBJECTS) $(AUDIO_OBJECTS) $(BUILD_DIR)/melvin_integrated.o
	@echo "🔗 Linking integrated system..."
	$(CXX) $(CXXFLAGS) $^ -o $@ $(LDFLAGS) $(PORTAUDIO_LIBS)
	@echo "✅ Built: $@"

$(TEST_TARGET): $(CORE_OBJECTS) $(AUDIO_OBJECTS) $(BUILD_DIR)/test_integration_audio.o
	@echo "🔗 Linking integration tests..."
	$(CXX) $(CXXFLAGS) $^ -o $@ $(LDFLAGS) $(PORTAUDIO_LIBS)
	@echo "✅ Built: $@"

# ============================================================================
# OBJECT FILES
# ============================================================================

$(BUILD_DIR)/%.o: $(CORE_DIR)/%.cpp | $(BUILD_DIR)
	@echo "🔨 Compiling $<..."
	$(CXX) $(CXXFLAGS) $(PORTAUDIO_CFLAGS) -c $< -o $@

$(BUILD_DIR)/%.o: $(AUDIO_DIR)/%.cpp | $(BUILD_DIR)
	@echo "🔨 Compiling $<..."
	$(CXX) $(CXXFLAGS) $(PORTAUDIO_CFLAGS) -c $< -o $@

$(BUILD_DIR)/%.o: $(EXAMPLES_DIR)/%.cpp | $(BUILD_DIR)
	@echo "🔨 Compiling $<..."
	$(CXX) $(CXXFLAGS) $(PORTAUDIO_CFLAGS) -c $< -o $@

$(BUILD_DIR)/%.o: $(TESTS_DIR)/%.cpp | $(BUILD_DIR)
	@echo "🔨 Compiling $<..."
	$(CXX) $(CXXFLAGS) $(PORTAUDIO_CFLAGS) -c $< -o $@

# ============================================================================
# DIRECTORY CREATION
# ============================================================================

$(BUILD_DIR):
	@mkdir -p $(BUILD_DIR)

# ============================================================================
# CONVENIENCE TARGETS
# ============================================================================

run: $(INTEGRATED_TARGET)
	@echo ""
	@echo "🚀 Starting Melvin Integrated System..."
	@echo ""
	@./$(INTEGRATED_TARGET)

test: $(TEST_TARGET)
	@echo ""
	@echo "🧪 Running integration tests..."
	@echo ""
	@./$(TEST_TARGET)

check: test
	@echo ""
	@echo "✅ Integration tests passed"

# Build, test, and run
complete: all
	@./$(TEST_TARGET) && echo "" && ./$(INTEGRATED_TARGET)

# ============================================================================
# CLEANUP
# ============================================================================

clean:
	@echo "🧹 Cleaning build artifacts..."
	rm -rf $(BUILD_DIR)
	rm -f $(INTEGRATED_TARGET) $(TEST_TARGET)
	rm -f melvin_integrated_nodes.bin melvin_integrated_edges.bin
	rm -f test_integration_nodes.bin test_integration_edges.bin
	@echo "✅ Clean complete"

# ============================================================================
# HELP
# ============================================================================

help:
	@echo "╔═══════════════════════════════════════════════════════════╗"
	@echo "║  MELVIN INTEGRATED SYSTEM - Build System                 ║"
	@echo "╚═══════════════════════════════════════════════════════════╝"
	@echo ""
	@echo "Targets:"
	@echo "  make all         - Build integrated system and tests"
	@echo "  make run         - Build and run integrated system"
	@echo "  make test        - Build and run integration tests"
	@echo "  make check       - Run tests and verify"
	@echo "  make complete    - Build, test, and run everything"
	@echo "  make clean       - Remove build artifacts"
	@echo "  make help        - Show this help message"
	@echo ""
	@echo "Components:"
	@echo "  - InputManager:     Unified multi-modal input"
	@echo "  - AudioPipeline:    Audio capture & recognition"
	@echo "  - AudioBridge:      Graph integration"
	@echo "  - AtomicGraph:      Knowledge base"
	@echo "  - Audio Logger:     Event logging"
	@echo ""
	@echo "Examples:"
	@echo "  make all && make test      # Build and test"
	@echo "  make run                   # Run integrated system"
	@echo "  make complete              # Full workflow"
	@echo ""

# ============================================================================
# DEPENDENCIES
# ============================================================================

-include $(CORE_OBJECTS:.o=.d)
-include $(AUDIO_OBJECTS:.o=.d)

