# Makefile for Melvin Vision Input
# [Live Vision Extension]

CXX = g++
CXXFLAGS = -std=c++20 -Wall -Wextra -O3 -I.

# Check if OpenCV is available
OPENCV_AVAILABLE := $(shell pkg-config --exists opencv4 && echo 1 || echo 0)

ifeq ($(OPENCV_AVAILABLE),1)
    CXXFLAGS += -DHAVE_OPENCV $(shell pkg-config --cflags opencv4)
    LDFLAGS = $(shell pkg-config --libs opencv4)
    $(info ✅ OpenCV detected - vision features enabled)
else
    $(info ⚠️  OpenCV not found - vision will run in test mode)
    $(info    Install: brew install opencv (macOS))
endif

# Source files
CORE_SRCS = melvin/core/storage.cpp \
            melvin/io/vision_input.cpp

DEMO_SRC = demo_vision_input.cpp

# Object files
CORE_OBJS = $(CORE_SRCS:.cpp=.o)
DEMO_OBJ = $(DEMO_SRC:.cpp=.o)

# Target
DEMO_TARGET = demo_vision_input

.PHONY: all clean demo run test-camera

all: demo

demo: $(DEMO_TARGET)

$(DEMO_TARGET): $(CORE_OBJS) $(DEMO_OBJ)
	@echo "Linking $@..."
	$(CXX) $(CXXFLAGS) -o $@ $^ $(LDFLAGS)
	@echo "✅ Built $@"

%.o: %.cpp
	@echo "Compiling $<..."
	$(CXX) $(CXXFLAGS) -c $< -o $@

run: demo
	@echo ""
	@echo "Running vision demo..."
	@echo ""
	./$(DEMO_TARGET)

test-camera:
	@echo "Testing camera access..."
ifeq ($(OPENCV_AVAILABLE),1)
	@python3 -c "import cv2; cap = cv2.VideoCapture(0); print('✅ Camera works!' if cap.isOpened() else '❌ Camera not found'); cap.release()"
else
	@echo "❌ OpenCV not available"
endif

clean:
	@echo "Cleaning..."
	rm -f $(CORE_OBJS) $(DEMO_OBJ) $(DEMO_TARGET)
	@echo "✅ Clean complete"

help:
	@echo "Melvin Vision Input Makefile"
	@echo ""
	@echo "Targets:"
	@echo "  make           - Build demo"
	@echo "  make run       - Build and run demo"
	@echo "  make test-camera - Test if camera works"
	@echo "  make clean     - Clean build files"
	@echo "  make help      - Show this help"
	@echo ""
	@echo "OpenCV Status: $(if $(filter 1,$(OPENCV_AVAILABLE)),✅ Available,❌ Not found)"




