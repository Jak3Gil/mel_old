# Makefile for OpenCV Attention Vision + AtomicGraph

CXX = g++
CXXFLAGS = -std=c++20 -Wall -Wextra -O3 -I. -I./melvin -DHAVE_OPENCV
LDFLAGS = 

# Try to find OpenCV
OPENCV_CFLAGS = $(shell pkg-config --cflags opencv4 2>/dev/null || pkg-config --cflags opencv 2>/dev/null || echo "")
OPENCV_LIBS = $(shell pkg-config --libs opencv4 2>/dev/null || pkg-config --libs opencv 2>/dev/null || echo "-lopencv_core -lopencv_videoio -lopencv_imgproc -lopencv_highgui -lopencv_imgcodecs")

CXXFLAGS += $(OPENCV_CFLAGS)
LDFLAGS += $(OPENCV_LIBS)

CORE = melvin/core
VISION = melvin/vision
DEMO = melvin/demos

OBJS = $(CORE)/atomic_graph.o $(VISION)/opencv_attention.o

all: run_opencv_vision
	@echo ""
	@echo "âœ… Built: run_opencv_vision"
	@echo ""
	@echo "ðŸš€ Run: ./run_opencv_vision [camera_index]"
	@echo ""

run_opencv_vision: $(OBJS) $(DEMO)/run_opencv_vision.o
	$(CXX) $(CXXFLAGS) -o $@ $^ $(LDFLAGS)

$(CORE)/%.o: $(CORE)/%.cpp $(CORE)/%.h
	@mkdir -p $(CORE)
	$(CXX) $(CXXFLAGS) -c $< -o $@

$(VISION)/%.o: $(VISION)/%.cpp $(VISION)/%.h
	@mkdir -p $(VISION)
	$(CXX) $(CXXFLAGS) -c $< -o $@

$(DEMO)/%.o: $(DEMO)/%.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $@

clean:
	rm -f $(OBJS) $(DEMO)/run_opencv_vision.o run_opencv_vision
	@echo "âœ… Cleaned"

test: run_opencv_vision
	@echo "Testing (5 second run)..."
	@timeout 5 ./run_opencv_vision 0 || echo "Test complete"

.PHONY: all clean test

